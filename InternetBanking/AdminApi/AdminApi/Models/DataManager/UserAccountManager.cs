using AdminApi.AutoGeneratedModel;
using AdminApi.Models.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System.Threading.Tasks;

namespace AdminApi.Models.DataManager
{
    public class UserAccountManager : DataRepository<Login, int>, IUserAccountRepository
    {
        private readonly ILogger<UserAccountManager> _logger;
        public UserAccountManager(McbaContext context, ILogger<UserAccountManager> logger) : base(context) 
        {
            _logger = logger;
        }

        public async Task LockAccountAsync(int customerID)
        {
            var login = await _context.Logins.FirstOrDefaultAsync(x => x.CustomerId == customerID).ConfigureAwait(false);
            if( login == null)
            {
                _logger.LogError($"Unable to get login for customer {customerID}");
            }
            if (login.IsLocked.Value)
            {
                return;
            }
            login.IsLocked = true;

            await _context.SaveChangesAsync().ConfigureAwait(false);

            // Unlock after a minute.
            await Task.Delay(60000);
            login.IsLocked = false;
            await _context.SaveChangesAsync().ConfigureAwait(false);
        }

    }
}
