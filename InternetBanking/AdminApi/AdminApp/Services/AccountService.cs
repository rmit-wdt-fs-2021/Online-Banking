using AdminApp.AutoGeneratedModel;
using AdminApp.Interfaces;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;

namespace AdminApp.Services
{
    public class AccountService : IAccountService
    {
        private readonly IHttpClientFactory _clientFactory;
        private readonly ILogger<AccountService> _logger;
        private HttpClient Client => _clientFactory.CreateClient("api");

        public AccountService(IHttpClientFactory clientFactory, ILogger<AccountService> logger)
        {
            _clientFactory = clientFactory;
            _logger = logger;
        }

        public async Task<List<Account>> GetAccountsFromCustomerAsync(int customerID)
        {
            const string baseUri = "api/account";
            var accountResponse = await Client.GetAsync($"{baseUri}/{customerID}");

            if (!accountResponse.IsSuccessStatusCode)
            {
                _logger.LogError($"Unable to get accounts for {customerID}");
            }

            var result = await accountResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
            var accounts = JsonConvert.DeserializeObject<List<Account>>(result);
            return accounts;
        }
    }
}
