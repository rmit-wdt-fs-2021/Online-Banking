using AdminApp.AutoGeneratedModel;
using AdminApp.Filters;
using AdminApp.Interfaces;
using AdminApp.ViewModels;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;

namespace AdminApp.Controllers
{

    [AuthorizeAdmin]
    public class TransactionController : Controller
    {
        private readonly ICustomerService _customerService;
        private readonly ITransactionService _transactionService;
        private readonly ILogger<TransactionController> _logger;

        public TransactionController(ICustomerService customerService, ITransactionService transactionService,
                                     ILogger<TransactionController> logger)
        {
            _customerService = customerService;
            _transactionService = transactionService;
            _logger = logger;
        }
        
        public async Task<IActionResult> Index(TransactionViewModel viewModel)
        {
            if (viewModel.CustomerID == 0)
            {
                var transactions = await _transactionService.GetAllTransactionsAsync().ConfigureAwait(false);
                return View(new TransactionViewModel
                {
                    Transactions = transactions
                });
            }
            else
            {
                var customer = await _customerService.GetCustomerAsync(viewModel.CustomerID);
                var transactions = await _transactionService.GetCustomerTransactionsAsync(customer);
                return View(new TransactionViewModel
                {
                    Transactions = transactions
                });
            }
        }

        [HttpGet]
        public async Task<IActionResult> ViewTransactions(TransactionViewModel viewModel)
        {
           // var filteredTransactions = await _transactionService.GetTransactionsAsync(viewModel.CustomerID, fromDate, toDate).ConfigureAwait(false);
            //var viewModel = new TransactionViewModel
            //{
            //    Transactions = filteredTransactions
            //};
           // return View(viewModel);
            return RedirectToAction(nameof(Index));
        }

    }
}
